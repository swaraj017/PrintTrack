<!DOCTYPE html>
<html>
<head>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #f6f9fc 0%, #f1f4f8 100%);
            padding: 20px;
            min-height: 100vh;
        }

        .product-detail-container {
            background: white;
            padding: 32px;
            border-radius: 24px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
            width: 1300px;
            min-height: 100vh;
            margin: 0 auto;
            animation: fadeIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .product-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 32px;
            padding-bottom: 24px;
            border-bottom: 2px solid #e6e9f0;
        }

        .product-title {
            display: flex;
            align-items: center;
            gap: 24px;
        }

        .product-image {
            width: 100px;
            height: 100px;
            background: linear-gradient(135deg, #f8fafc 0%, #eef2f7 100%);
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
        }

        .product-image:hover {
            transform: scale(1.05);
        }

        .product-info h1 {
            color: #1a1f36;
            font-size: 32px;
            margin-bottom: 12px;
            font-weight: 600;
            letter-spacing: -0.5px;
        }

        .product-stats {
            display: flex;
            gap: 24px;
            color: #4a5568;
            font-size: 15px;
        }

        .stat-item {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            background: #f8fafc;
            border-radius: 12px;
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            transform: translateY(-2px);
            background: #f1f5f9;
        }

        .stock-status {
            background: linear-gradient(135deg, #4ade80 0%, #22c55e 100%);
            color: white;
            padding: 12px 24px;
            border-radius: 24px;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(34, 197, 94, 0.2);
        }

        .stock-status:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(34, 197, 94, 0.3);
        }

        .search-section {
            margin: 32px 0;
            padding: 24px;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border-radius: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.03);
        }

        .search-container {
            display: flex;
            gap: 16px;
            margin-bottom: 16px;
        }

        .search-input {
            flex: 1;
            padding: 16px 24px;
            border: 2px solid #e2e8f0;
            border-radius: 16px;
            font-size: 15px;
            transition: all 0.3s ease;
            background: white;
        }

        .search-input:focus {
            outline: none;
            border-color: #4f46e5;
            box-shadow: 0 0 0 4px rgba(79, 70, 229, 0.1);
        }

        .search-button {
            padding: 16px 32px;
            background: linear-gradient(135deg, #4f46e5 0%, #4338ca 100%);
            color: white;
            border: none;
            border-radius: 16px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(79, 70, 229, 0.2);
        }

        .search-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(79, 70, 229, 0.3);
        }

        .tag-container {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            margin-top: 16px;
        }

        .search-tag {
            background: linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%);
            color: #4338ca;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(79, 70, 229, 0.1);
        }

        .search-tag:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.15);
        }

        .search-tag button {
            background: none;
            border: none;
            color: #4338ca;
            cursor: pointer;
            font-size: 18px;
            padding: 0;
            display: flex;
            align-items: center;
            transition: transform 0.2s ease;
        }

        .search-tag button:hover {
            transform: scale(1.2);
        }

        .charts-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 32px;
            margin-top: 32px;
        }

        .chart-card {
            background: white;
            border-radius: 20px;
            padding: 24px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .chart-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
        }

        .chart-card h3 {
            color: #1a1f36;
            margin-bottom: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 20px;
            font-weight: 600;
        }

        .serial-list {
            height: 400px;
            overflow-y: auto;
            padding: 16px;
            background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
            border-radius: 16px;
            scrollbar-width: thin;
            scrollbar-color: #cbd5e1 #f1f5f9;
        }

        .serial-list::-webkit-scrollbar {
            width: 8px;
        }

        .serial-list::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 4px;
        }

        .serial-list::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 4px;
        }

        .serial-item {
            padding: 12px 16px;
            margin-bottom: 12px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);
            transition: all 0.3s ease;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .serial-item:hover {
            transform: translateX(8px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
        }

        .matched {
            background: linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%);
            border-left: 4px solid #4338ca;
            animation: highlight 0.5s ease-out;
        }

        @keyframes highlight {
            from { background: white; }
            to { background: linear-gradient(135deg, #e0e7ff 0%, #c7d2fe 100%); }
        }

        .status-badge {
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-available {
            background: #dcfce7;
            color: #166534;
        }

        .status-sold {
            background: #fee2e2;
            color: #991b1b;
        }
    </style>
</head>
<body>
  <div class="product-detail-container">
      <div class="product-header">
          <div class="product-title">
              <div class="product-image">
                <img src="https://static.vecteezy.com/system/resources/previews/019/489/390/original/3d-delivery-box-parcel-vector.jpg" alt="Product Image" style="width: 100%; height: 100%; object-fit: cover;">
              </div>
              <div class="order-details">
                <h3><strong>Order ID:</strong></h3> <%= orderId %>
                 
            </div>
              <div class="product-info">
                  <h1><%= order.productName %></h1>
                  <div class="product-stats">
                      <span class="stat-item">ðŸ“¦ Total Units: <%= totalQuantity %></span>  
                      <span class="stat-item">âœ… Available: <%= availableSerials.length %></span>  
                      <span class="stat-item">ðŸ”„ Allocated: <%= soldSerials.length %> </span>  
                     
                  </div>
              </div>
          </div>
          
      </div>

      
      

      <div class="search-section">
          <div class="search-container">
              <input type="text" id="serialSearch" class="search-input" 
                     placeholder="Enter serial numbers separated by commas (e.g., SER001, SER002)">
              <button class="search-button" onclick="searchSerials()">Search Serials</button>
          </div>
          <div class="tag-container" id="searchTags"></div>
      </div>

      <div class="charts-section">
          <div class="chart-card">
              <h3>
                  Available Serials
                  <span class="status-badge status-available">Total: <%= availableSerials.length %></span>
              </h3>
              <div class="serial-list" id="availableList">
                  <% availableSerials.forEach(serial => { %>
                      <div class="serial-item">
                          <%= serial %>
                          <span class="status-badge status-available">Available</span>
                      </div>
                  <% }) %>
              </div>
          </div>

          <div class="chart-card">
              <h3>
                  Sold Serials
                  <span class="status-badge status-sold">Total: <%= soldSerials.length %></span>
              </h3>
              <div class="serial-list" id="soldList">
                  <% soldSerials.forEach(serial => { %>
                      <div class="serial-item">
                          <%= serial %>
                          <span class="status-badge status-sold">Sold</span>
                      </div>
                  <% }) %>
              </div>
          </div>
      </div>
  </div>
 


    <script>
        function searchSerials() {
            const searchInput = document.getElementById('serialSearch');
            const searchValue = searchInput.value.trim();
            
            if (!searchValue) return;

            const serialNumbers = searchValue.split(',').map(s => s.trim()).filter(s => s);
            
            // Clear previous search
            clearSearch();
            
            // Add search tags
            const tagContainer = document.getElementById('searchTags');
            serialNumbers.forEach(serial => {
                const tag = document.createElement('span');
                tag.className = 'search-tag';
                tag.innerHTML = `
                    ${serial}
                    <button onclick="removeTag(this)">Ã—</button>
                `;
                tagContainer.appendChild(tag);
            });

            // Highlight matching serials
            const allSerials = document.querySelectorAll('.serial-item');
            allSerials.forEach(item => {
                const serialText = item.textContent.trim().split('\n')[0].trim();
                if (serialNumbers.includes(serialText)) {
                    item.classList.add('matched');
                }
            });

            // Clear input
            searchInput.value = '';
        }

        function clearSearch() {
            document.getElementById('searchTags').innerHTML = '';
            document.querySelectorAll('.serial-item').forEach(item => {
                item.classList.remove('matched');
            });
        }

        function removeTag(button) {
            const tag = button.parentElement;
            const serial = tag.textContent.trim().slice(0, -1);
            tag.remove();

            document.querySelectorAll('.serial-item').forEach(item => {
                const serialText = item.textContent.trim().split('\n')[0].trim();
                if (serialText === serial) {
                    item.classList.remove('matched');
                }
            });
        }
    </script>
</body>
</html>